using ParallelTemperingMonteCarlo
using Random

#demonstration of the new verison of the new code   

#-------------------------------------------------------#
#-----------------------MC Params-----------------------#
#-------------------------------------------------------#

Random.seed!(1234)

# number of atoms
n_atoms = 55

# temperature grid
ti = 6.
tf = 20.
n_traj = 24

temp = TempGrid{n_traj}(ti,tf) 

# MC simulation details

mc_cycles = 1000000 #default 20% equilibration cycles on top


mc_sample = 1  #sample every mc_sample MC cycles

#move_atom=AtomMove(n_atoms) #move strategy (here only atom moves, n_atoms per MC cycle)
displ_atom = 0.1 # Angstrom
n_adjust = 100

max_displ_atom = [0.1*sqrt(displ_atom*temp.t_grid[i]) for i in 1:n_traj]

mc_params = MCParams(mc_cycles, n_traj, n_atoms, mc_sample = mc_sample, n_adjust = n_adjust)


#-------------------------------------------------------------#
#----------------------Potential------------------------------#
#-------------------------------------------------------------#

c=[-10.5097942564988, 989.725135614556, -101383.865938807, 3918846.12841668, -56234083.4334278, 288738837.441765]
pot = ELJPotentialEven{6}(c)


a=[0.0005742,-0.4032,-0.2101,-0.0595,0.0606,0.1608]
b=[-0.01336,-0.02005,-0.1051,-0.1268,-0.1405,-0.1751]
c1=[-0.1132,-1.5012,35.6955,-268.7494,729.7605,-583.4203]
potB = ELJPotentialB{6}(a,b,c1)
#-------------------------------------------------------------#
#------------------------Move Strategy------------------------#
#-------------------------------------------------------------#
ensemble = NVT(n_atoms)
move_strat = MoveStrategy(ensemble)

#-------------------------------------------------------------#
#-----------------------Starting Config-----------------------#
#-------------------------------------------------------------#
#starting configurations
#icosahedral ground state of Ne13 (from Cambridge cluster database) in Angstrom
pos_ne55 = [[-1.8187233512, -0.4312887551, -1.0407964208], 
[-1.2984764759, 1.6563650916, -0.384030528], 
[-1.8032563526, 0.0882846359, 1.1478408156], 
[-0.9400285245, -1.8683525361, 0.4501901263], 
[-0.1232633899, 0.668858763, -2.0284231112], 
[0.0982689768, -1.5095376061, -1.5128468587], 
[-0.0982490824, 1.5095340614, 1.5128450736], 
[0.9400322, 1.868347854, -0.4501796219], 
[1.2984783869, -1.6563562578, 0.3840360573], 
[0.1232835007, -0.6688519385, 2.0284192039], 
[1.8032655246, -0.0882782646, -1.1478181497], 
[1.8187138065, 0.4312856349, 1.0407891901], 
[-1.5702724374, 0.6171239233, -0.7177487839], 
[-1.3897066652, -1.1584302821, -0.2975152358], 
[-0.8666704643, -0.977679361, -1.2863840832], 
[-0.9782659161, 0.1196730822, -1.5461022703], 
[-1.8245528826, -0.1727868768, 0.0539217218], 
[-0.012591113, -0.4234865501, -1.7838917977], 
[-1.381912882, -0.896697543, 0.8049964078], 
[0.7035994285, -1.5948004173, -0.5686303495], 
[-1.5624787986, 0.8788549469, 0.3847631473], 
[0.4114387601, 1.2781028076, -1.2485801098], 
[-0.9578726658, 0.8048919292, 1.340302029], 
[-0.8462767302, -0.2924586427, 1.6000199864], 
[0.1805659338, -1.7755506532, 0.4202326063], 
[-0.1805649527, 1.7755509225, -0.4202316409], 
[0.8462894232, 0.2924622119, -1.6000123515], 
[-0.7161949291, 1.1713145619, -1.215258715], 
[0.9578846395, -0.80488875, -1.3402948294], 
[-0.4240339776, -1.7015895288, -0.5353079453], 
[-0.4114334905, -1.2780996479, 1.248584079], 
[-0.7035948602, 1.5948002185, 0.5686341181], 
[1.8245417184, 0.1727873937, -0.0539133522], 
[0.4240380245, 1.7015817409, 0.5353075027], 
[0.7161980919, -1.1713070962, 1.21525405], 
[0.9782665992, -0.1196720587, 1.546087319], 
[0.8666714337, 0.9776717013, 1.2863712951], 
[1.5624773781, -0.878846938, -0.3847507544], 
[1.3819130548, 0.8966959439, -0.8049802706], 
[0.0126100329, 0.4234868072, 1.7838835264], 
[1.3896961766, 1.1584208717, 0.297516123], 
[1.5702604256, -0.617117992, 0.7177448084], 
[-1.41498e-5, -3.3511e-6, -8.0864e-6], 
[-0.8930013201, -0.2117646508, -0.5110355818], 
[-0.6375602523, 0.8132770362, -0.1885632314], 
[-0.4615616402, -0.9173661279, 0.2210406165], 
[-0.8854087184, 0.0433462786, 0.5635878731], 
[0.0482436911, -0.7411872721, -0.7428140624], 
[-0.0605291885, 0.328409388, -0.9959629822], 
[0.8929876559, 0.2117611144, 0.5110271539], 
[0.6375485541, -0.813279844, 0.188557611], 
[0.4615500194, 0.9173639515, -0.2210457346], 
[-0.0482510105, 0.7411849444, 0.7428075465], 
[0.8854004844, -0.0433475039, -0.5635896356], 
[0.0605223003, -0.328411371, 0.9959565058]]

#convert to Bohr
AtoBohr = 1.8897259886
pos_ne55 = pos_ne55 * AtoBohr

#binding sphere
bc_ne55 = SphericalBC(radius=14*AtoBohr) 

length(pos_ne55) == n_atoms || error("number of atoms and positions not the same - check starting config")

start_config = Config(pos_ne55, bc_ne55)


#----------------------------------------------------------------#
#-------------------------Run Simulation-------------------------#
#----------------------------------------------------------------#


#to check code in REPL
#Out = ptmc_run!(mc_params,temp,start_config,pot,ensemble;save=1000)
Out = ptmc_run!(false;save=1000) 
#rm("checkpoint",recursive=true)
## 