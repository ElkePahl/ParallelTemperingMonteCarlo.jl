using ParallelTemperingMonteCarlo
using Random, DelimitedFiles

#demonstration of the new version of the new code   
script_folder = @__DIR__ # folder where this script is located
data_path = joinpath(script_folder, "data") # path to data files, so "./data/"
#-------------------------------------------------------#
#-----------------------MC Params-----------------------#
#-------------------------------------------------------#


Random.seed!(1234)
n_atoms = 55
ti = 450.
tf = 900.
n_traj = 2

temp = TempGrid{n_traj}(ti,tf) 

# MC simulation details

mc_cycles = 200  #default 20% equilibration cycles on top


mc_sample = 1  #sample every mc_sample MC cycles

#move_atom=AtomMove(n_atoms) #move strategy (here only atom moves, n_atoms per MC cycle)
displ_atom = 0.1 # Angstrom
n_adjust = 100

max_displ_atom = [0.1*sqrt(displ_atom*temp.t_grid[i]) for i in 1:n_traj]

mc_params = MCParams(mc_cycles, n_traj, n_atoms, mc_sample = mc_sample, n_adjust = n_adjust)


#-------------------------------------------------------------#
#----------------------Potential------------------------------#
#-------------------------------------------------------------#

evtohartree = 0.0367493
nmtobohr = 18.8973

X = [ 2              0.001   0.000  11.338
 #10              0.001   0.000  11.338
 2              0.020   0.000  11.338
 #10              0.020   0.000  11.338
 2              0.035   0.000  11.338
 #10              0.035   0.000  11.338
 2              0.100   0.000  11.338
 #10              0.100   0.000  11.338
 2              0.400   0.000  11.338
 #10              0.400   0.000  11.338
 ]

radsymmvec = []
#--------------------------------------------#
#--------Vector of angular symm values-------#
#--------------------------------------------#
V = [[0.0001,1,1,11.338],
[0.0001,-1,2,11.338],
[0.003,-1,1,11.338],
[0.003,-1,2,11.338],
[0.008,-1,1,11.338],
[0.008,-1,2,11.338],
[0.008,1,2,11.338],
[0.015,1,1,11.338],
[0.015,-1,2,11.338],
[0.015,-1,4,11.338],
[0.015,-1,16,11.338],
[0.025,-1,1,11.338],
[0.025,1,1,11.338],
[0.025,1,2,11.338],
[0.025,-1,4,11.338],
[0.025,-1,16,11.338],
[0.025,1,16,11.338],
[0.045,1,1,11.338],
[0.045,-1,2,11.338],
[0.045,-1,4,11.338],
[0.045,1,4,11.338],
[0.045,1,16,11.338],
[0.08,1,1,11.338],
[0.08,-1,2,11.338],
[0.08,-1,4,11.338],
[0.08,1,4,11.338]]
T = [111,110,100]
angularsymmvec = []
#-------------------------------------------#
#-----------Including scaling data----------#
#-------------------------------------------#
file = open(joinpath(data_path,"scaling.data")) # full path "./data/scaling.data"
scalingvalues = readdlm(file)
close(file)
G_value_vec = []
for row in eachrow(scalingvalues[1:88,:])
    max_min = [row[4],row[3]]
    push!(G_value_vec,max_min)
end
G_value_vec_b = []
for row in eachrow(scalingvalues[89:end,:])
    max_min = [row[4],row[3]]
    push!(G_value_vec_b,max_min)
end
for symmindex in eachindex(eachrow(X))
    row = X[symmindex,:]
    radsymm = RadialType2a{Float64}(row[2],row[4],Int(row[1]),[G_value_vec[(symmindex-1)*2 + 1],G_value_vec[(symmindex-1)*2 + 2]],[G_value_vec_b[(symmindex-1)*2 + 1],G_value_vec_b[(symmindex-1)*2 + 2]])
    push!(radsymmvec,radsymm)
end
let n_index = 10
let j_index = 0
for element in V
    #for types in T

        j_index += 1

        symmfunc = AngularType3a{Float64}(element[1],element[2],element[3],11.338,2,[G_value_vec[n_index + (j_index-1)*3 + 1],G_value_vec[n_index + (j_index-1)*3 + 2],G_value_vec[n_index + (j_index-1)*3 + 3] ],[G_value_vec_b[n_index + (j_index-1)*3 + 1],G_value_vec_b[n_index + (j_index-1)*3 + 2],G_value_vec_b[n_index + (j_index-1)*3 + 3] ])

        push!(angularsymmvec,symmfunc)
    #end
end
end
end
#---------------------------------------------------#
#------concatenating radial and angular values------#
#---------------------------------------------------#
totalsymmvec = vcat(radsymmvec,angularsymmvec)
#--------------------------------------------------#
#-----------Initialising the nnp weights-----------#
#--------------------------------------------------#
num_nodes::Vector{Int32} = [88, 20, 20, 1]
activation_functions::Vector{Int32} = [1, 2, 2, 1]

file = open(joinpath(data_path, "weights.029.data"), "r+") # "./data/weights.029.data"
weights=readdlm(file)
close(file)
weights = vec(weights)
nnpcu = NeuralNetworkPotential(num_nodes,activation_functions,weights)

file2=open(joinpath(data_path, "weights.030.data"),"r+") #./data/weights.030.data
weights2=readdlm(file2)
close(file2)
weights2 = vec(weights2)
nnpzn= NeuralNetworkPotential(num_nodes,activation_functions,weights2)
ensemble = NNVT([50,5];natomswaps=2)

runnerpotential = RuNNerPotential2Atom(nnpcu,nnpzn,radsymmvec,angularsymmvec,50,5)

#--------------------------------------------------------#
#--------------------------------------------------------#
#--------------------------------------------------------#
ico_55 = [[4.985634707865548, -3.7769389613932383, -3.9521526269111558], 
[-1.722325512183356, -1.0388667473271287, 1.434762481782421], 
[-1.0185585505661794, -4.612849344210171, -4.094333385750073], 
[-1.2698931383996006, -5.629804383060905, 5.07843037779024], 
[2.5824254175908408, -8.336431054764386, -0.16922910142091735], 
[0.20159413550989244, -3.8885389949674822, 2.5022388162096996], 
[4.588574723903642, -2.6566713799834405, -0.6504495204386757], 
[7.33042506728946, -0.7271036415131031, 0.10742081622098226], 
[3.6764831134101086, -1.957720218615524, 6.36341229891658], 
[-0.5138914657724829, -0.437177170059025, -1.7474175070289781], 
[5.998232139796206, -4.553492493722979, 5.093059877620862], 
[7.047210442864896, -3.9968386729376846, 1.578607607717669], 
[2.255631191460888, -5.069040182738276, 0.0914030529407529], 
[3.0242766253096987, -0.7255597849430888, -5.232903683460175], 
[-4.666779685146907, 0.35601505347317314, 2.78318520071428], 
[5.420865870529578, 2.352676764987948, -1.085211337927597], 
[1.9286047609084505, -4.308736975514878, -6.003324201610824], 
[1.79699085665546, -0.45910988400268005, 3.791837484781196], 
[-2.802228883732836, -5.186839902081347, 1.6597530744569717], 
[1.4406603215395712, 0.7847432839283491, 6.875936771305867], 
[7.226220582686312, 2.040634489031867, 2.440231407247905], 
[2.0691000519268528, -6.129426523705469, -2.9218746232157624], 
[0.15378645300781274, 4.972887623856869, 1.281107957243052], 
[6.14754900355367, -0.6289178712810877, -3.2792288447807616], 
[3.676619539318498, -3.1457753792776977, 2.9194453151055826], 
[4.380119786860701, -6.570152118787659, 2.3508441895345324], 
[-3.4665032646550755, -2.29844189563332, -2.614888375158035], 
[1.5230812154094415, -1.550018300262627, 0.6082227436703611], 
[-1.5576842025487168, 0.4683757017302985, 5.105475258438509], 
[1.712785208856102, -3.0247613911166136, -2.7050128533865867], 
[0.563085524659748, 2.0568301448873108, -4.360315933821254], 
[5.18858862597056, -6.140426954203548, -1.2828492910328528], 
[-3.8826338767707793, -5.6553723097906, -1.6610754152646576], 
[-1.7465720690626536, 2.3979993202817393, 2.1832391276675542], 
[-3.2419977602281436, -2.6418395731466418, 4.250941628168225], 
[2.1460626144431467, -5.630942502788504, 5.228315758555585], 
[4.407363054277352, 0.1723082404713877, 1.300943919123948], 
[2.343341425436802, 3.913539374653587, -1.7617723206704436], 
[6.212503960012122, -1.0816514740271281, 3.7939942926684154], 
[7.91013622125474, -3.818643648462605, -1.8696266943362498], 
[-4.786300189739702, -2.538212773626694, 0.584022266560952], 
[4.110042056432844, 3.8029689435025573, 1.9890089733223142], 
[4.121334238847576, 2.581983172088693, -4.493482610582573], 
[-0.36411415745559506, -1.3749777266561678, -5.024194383821465], 
[-2.7784699958467547, 0.9548370492813316, -3.919708404892704], 
[4.375599280782354, 1.491323825541801, 5.081388812087927], 
[-1.1054577177458742, 3.139478897432889, -1.2246684830329586], 
[0.23462987661104878, -2.5522636511129635, 5.890847111654113], 
[1.4100616469193497, 1.6859706828444345, 0.989361829647607], 
[-3.546558349069341, 1.0051352267665412, -0.6577005819720206], 
[2.8742863598399593, 0.38770053897811385, -1.958549267049869], 
[-0.6780273767452553, -7.182393231192263, -1.1143571415359816], 
[-0.9385567692675009, -3.732545946108516, -0.623506771595254], 
[1.397726375426967, 3.4159270915580247, 4.1473459764377445], 
[0.5192696835517038, -7.194679310435224, 2.378049258599863]]
Random.seed!(1234)
pos_55 = shuffle!(ico_55)


bc_cu55 = SphericalBC(radius=14*AtoBohr)   #5.32 Angstrom
start_config = Config(pos_55, bc_cu55)

ptmc_run!(mc_params,temp,start_config,runnerpotential,ensemble;save=100)